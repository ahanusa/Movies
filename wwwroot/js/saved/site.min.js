function mapData(n){return{id:n.id,imageUrl:n.imageUrl,title:n.title,releaseDate:n.releaseDate,overview:n.overview,isSelected:!1,canDelete:!0}}Vue.component("searchBox",{template:`<div class="searchBox" for="search">
              <label for="search" class="fa fa-search fa-3" aria-hidden="true"></label>
              <input id="search"
                     type="text"
                     v-on:keyup="onTextEntered($event)"
                     v-on:input="onInput($event)"
                     v-on:click="onSelectAllText($event)" />
             </div>`,methods:{onSelectAllText:function(n){n.target.select()},onTextEntered:function(n){this.$emit("text-entered",n.target.value)},onInput:function(n){this.$emit("input",n.target.value)}}});Vue.component("modal",{template:`<transition name="modal">
    <div class="modal-mask" v-show="show">
      <div class="modal-container">
          <div class="modal-header">
              <h3>Are you sure?</h3>
          </div>
          <div class="modal-footer">
              <button class="default-button" @click="close(true)">YES</button>
              <button class="default-button" @click="close(false)">NO</button>
          </div>
      </div>
    </div>
  </transition>`,props:["show"],methods:{close:function(n){this.$emit("close",n)}}});Vue.component("moviesList",{template:`<div>
                <div class="movie" v-for="movie in movies">
                  <i class="action-button fa fa-minus"
                     v-if="movie.canDelete"
                     v-bind:id="movie.id"
                     v-on:click="deleteMovie($event.target)"
                     aria-hidden="true">
                  </i>
                  <i class="action-button right fa fa-plus"
                     v-bind:id="movie.id"
                     v-on:click="addMovie($event.target)"
                     aria-hidden="true">
                  </i>
                  <img v-bind:alt="movie.title"
                      v-bind:id="movie.id"
                      v-bind:class="{ noImage: !movie.imageUrl, selected: movie.isSelected }"
                      v-bind:src="movie.imageUrl"
                      v-on:click="selectMovie($event.target)" />
                </div>
            </div>`,props:["movies"],methods:{selectMovie:function(n){this.$emit("movie-selected",n.id)},addMovie:function(n){this.$emit("add-request",n.id)},deleteMovie:function(n){this.$emit("delete-request",n.id)}}});let arrowUp="fa fa-arrow-circle-up",arrowDown="fa fa-arrow-circle-down",queueDown="queued-movies down",queueUp="queued-movies up";Vue.component("movieQueue",{template:`<div>
               <div class="toggle-view" v-on:click="toggleView">
                 <i v-bind:class="directionSymbol" aria-hidden="true"></i>
               </div>
               <div v-bind:class="queueClass">
                 <div class="queued-movie loaded" v-for="movie in movies">
                   <i class="action-button right fa fa-remove"
                      v-bind:id="movie.id"
                      v-on:click="removeMovie($event.target)"
                      aria-hidden="true">
                   </i>
                   <img v-bind:alt="movie.title"
                        v-bind:id="movie.id"
                        v-bind:class="{ noImage: !movie.imageUrl, queued : true }"
                        v-bind:src="movie.imageUrl" />
                 </div>
               </div>
             </div>`,data:function(){return{directionSymbol:arrowUp,queueClass:queueDown,isExpanded:!1}},props:["movies"],methods:{removeMovie:function(n){this.$emit("delete-request",n.id)},toggleView:function(){if(this.isExpanded)return this.collapse();this.expand()},collapse:function(){this.isExpanded=!1;this.directionSymbol=arrowUp;this.queueClass=queueDown},expand:function(){this.isExpanded=!0;this.directionSymbol=arrowDown;this.queueClass=queueUp}},watch:{movies:function(){if(this.movies.length)return this.expand();this.collapse()}}});var app=new Vue({el:"#app",data:{movies:[],categories:[],queuedMovies:[],searchText:"",showModal:!1,deleteId:null,selectedMovies:new Map,selectedCategories:[]},created:function(){axios.get("/api/movies").then(n=>app.movies=_.sortBy(n.data.map(mapData),"title"));axios.get("/api/categories").then(n=>app.categories=_.sortBy(n.data,"name"))},methods:{addToQueue:function(n){var t=this.movies.find(t=>t.id==n);this.queuedMovies.indexOf(t)===-1&&this.queuedMovies.push(t)},removeFromQueue:function(n){var t=this.queuedMovies.find(t=>t.id==n);this.queuedMovies.splice(this.queuedMovies.indexOf(t),1)},confirmDelete:function(n){this.deleteId=n;this.showModal=!0},selectMovie:function(n){var t=this.movies.find(t=>t.id==n);t.isSelected=!t.isSelected;this.getSelectedMovies()},getSelectedMovies:function(){console.log("SELECTED: ",this.movies.filter(n=>n.isSelected))},getSelectedCategories:function(){return this.selectedCategories.map(n=>n.name)},categorySelected:function(n){var t=this.categories.find(t=>t.id==n.target.value);this.selectedCategories.push(t)},deleteMovie:function(n){if(this.showModal=!1,n){let n=this.deleteId,t=`/api/movies/${n}`;axios.delete(t).then(()=>{var t=this.movies.find(t=>t.id==n);this.movies.splice(this.movies.indexOf(t),1)})}}},computed:{filteredMovies:function(){return this.searchText?this.searchText.length===1?this.movies.filter(n=>n.title.toLowerCase().replace("the ","").startsWith(this.searchText.toLowerCase())):this.movies.filter(n=>n.title.toLowerCase().indexOf(this.searchText.toLowerCase())>-1):this.movies}}});